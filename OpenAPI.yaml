openapi: 3.1.0
info:
  title: Passage
  description: OAuth2 Identity Platform - A secure, composable authentication framework providing OAuth/OIDC integrations for enterprise-grade applications.
  version: 1.0.0
  contact:
    name: Passage Support
    url: https://github.com/your-org/passage
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: 'https://api.passage.dev'
    description: Production server
  - url: 'https://staging.passage.dev'
    description: Staging server
  - url: 'http://localhost:3000'
    description: Development server

security:
  - BearerAuth: [ ]
  - ClientCredentials: [ ]

paths:
  # OAuth2 Authorization Endpoint
  /oauth/authorize:
    get:
      tags:
        - OAuth2 Authorization
      summary: OAuth2 Authorization Endpoint
      description: Initiates the OAuth2 authorization code flow
      parameters:
        - name: response_type
          in: query
          required: true
          schema:
            type: string
            enum: [ code, token ]
          description: The response type (code for authorization code flow)
        - name: client_id
          in: query
          required: true
          schema:
            type: string
          description: The client identifier
        - name: redirect_uri
          in: query
          required: true
          schema:
            type: string
            format: uri
          description: The redirect URI after authorization
        - name: scope
          in: query
          schema:
            type: string
            default: openid
          description: Space-separated list of scopes
        - name: state
          in: query
          schema:
            type: string
          description: Anti-CSRF token
        - name: code_challenge
          in: query
          schema:
            type: string
          description: PKCE code challenge
        - name: code_challenge_method
          in: query
          schema:
            type: string
            enum: [ S256, plain ]
            default: S256
          description: PKCE code challenge method
      responses:
        '302':
          description: Redirect to authorization page or back to client
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  # OAuth2 Token Endpoint
  /oauth/token:
    post:
      tags:
        - OAuth2 Token
      summary: OAuth2 Token Endpoint
      description: Exchange authorization code for access token
      security: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum: [ authorization_code, refresh_token, client_credentials ]
                code:
                  type: string
                  description: Authorization code (for authorization_code grant)
                redirect_uri:
                  type: string
                  format: uri
                  description: Must match the redirect_uri from /authorize
                client_id:
                  type: string
                  description: Client identifier
                client_secret:
                  type: string
                  description: Client secret
                refresh_token:
                  type: string
                  description: Refresh token (for refresh_token grant)
                scope:
                  type: string
                  description: Requested scopes
                code_verifier:
                  type: string
                  description: PKCE code verifier
              required: [grant_type, client_id]
      responses:
        '200':
          description: Successful token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
        '401':
          description: Invalid client credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'

  # Token Introspection
  /oauth/introspect:
    post:
      tags:
        - OAuth2 Token
      summary: Token Introspection
      description: RFC 7662 - Introspect access tokens
      security:
        - ClientCredentials: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The token to introspect
                token_type_hint:
                  type: string
                  enum: [ access_token, refresh_token ]
              required:
                - token
      responses:
        '200':
          description: Token introspection response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntrospectionResponse'

  # Token Revocation
  /oauth/revoke:
    post:
      tags:
        - OAuth2 Token
      summary: Token Revocation
      description: RFC 7009 - Revoke access or refresh tokens
      security:
        - ClientCredentials: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The token to revoke
                token_type_hint:
                  type: string
                  enum: [ access_token, refresh_token ]
              required:
                - token
      responses:
        '200':
          description: Token successfully revoked
        '400':
          description: Invalid request

  # JWKS Endpoint
  /.well-known/jwks.json:
    get:
      tags:
        - Discovery
      summary: JSON Web Key Set
      description: RFC 7517 - Public keys for token verification
      security: [ ]
      responses:
        '200':
          description: JWKS response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKSResponse'

  # OpenID Connect Discovery
  /.well-known/openid-configuration:
    get:
      tags:
        - Discovery
      summary: OpenID Connect Discovery
      description: OpenID Connect Discovery 1.0 configuration
      security: [ ]
      responses:
        '200':
          description: OpenID Connect configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCDiscovery'

  # UserInfo Endpoint
  /oauth/userinfo:
    get:
      tags:
        - OpenID Connect
      summary: UserInfo Endpoint
      description: OpenID Connect UserInfo endpoint
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Invalid or expired token

  # Health Check
  /health:
    get:
      tags:
        - System
      summary: Health Check
      description: System health status
      security: [ ]
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: 1.0.0

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token
    ClientCredentials:
      type: http
      scheme: basic
      description: Client ID and secret for client authentication

  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The access token
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          description: Token lifetime in seconds
        refresh_token:
          type: string
          description: The refresh token
        scope:
          type: string
          description: Granted scopes
        id_token:
          type: string
          description: OpenID Connect ID token (if openid scope requested)
      required:
        - access_token
        - token_type

    OAuth2Error:
      type: object
      properties:
        error:
          type: string
          enum: [ invalid_request, invalid_client, invalid_grant, unauthorized_client, unsupported_grant_type, invalid_scope ]
        error_description:
          type: string
          description: Human-readable error description
        error_uri:
          type: string
          format: uri
          description: URI with error information
      required:
        - error

    IntrospectionResponse:
      type: object
      properties:
        active:
          type: boolean
          description: Whether the token is active
        scope:
          type: string
          description: Space-separated list of scopes
        client_id:
          type: string
          description: Client identifier
        username:
          type: string
          description: Human-readable identifier for the resource owner
        token_type:
          type: string
          example: Bearer
        exp:
          type: integer
          description: Expiration timestamp
        iat:
          type: integer
          description: Issued at timestamp
        sub:
          type: string
          description: Subject identifier
      required:
        - active

    JWKSResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            properties:
              kty:
                type: string
                description: Key type
              use:
                type: string
                description: Key use
              key_ops:
                type: array
                items:
                  type: string
              alg:
                type: string
                description: Algorithm
              kid:
                type: string
                description: Key ID
              n:
                type: string
                description: RSA modulus
              e:
                type: string
                description: RSA exponent
      required:
        - keys

    OIDCDiscovery:
      type: object
      properties:
        issuer:
          type: string
          format: uri
        authorization_endpoint:
          type: string
          format: uri
        token_endpoint:
          type: string
          format: uri
        userinfo_endpoint:
          type: string
          format: uri
        jwks_uri:
          type: string
          format: uri
        registration_endpoint:
          type: string
          format: uri
        scopes_supported:
          type: array
          items:
            type: string
        response_types_supported:
          type: array
          items:
            type: string
        grant_types_supported:
          type: array
          items:
            type: string
        subject_types_supported:
          type: array
          items:
            type: string
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
        code_challenge_methods_supported:
          type: array
          items:
            type: string
      required:
        - issuer
        - authorization_endpoint
        - token_endpoint
        - jwks_uri
        - response_types_supported
        - subject_types_supported
        - id_token_signing_alg_values_supported

    UserInfo:
      type: object
      properties:
        sub:
          type: string
          description: Subject identifier
        name:
          type: string
          description: Full name
        given_name:
          type: string
          description: Given name
        family_name:
          type: string
          description: Family name
        preferred_username:
          type: string
          description: Preferred username
        email:
          type: string
          format: email
          description: Email address
        email_verified:
          type: boolean
          description: Whether email is verified
        picture:
          type: string
          format: uri
          description: Profile picture URL
        updated_at:
          type: integer
          description: Last updated timestamp
      required:
        - sub

tags:
  - name: OAuth2 Authorization
    description: OAuth2 authorization flow endpoints
  - name: OAuth2 Token
    description: Token management endpoints
  - name: OpenID Connect
    description: OpenID Connect specific endpoints
  - name: Discovery
    description: Well-known discovery endpoints
  - name: System
    description: System and health endpoints

